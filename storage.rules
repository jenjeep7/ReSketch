rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Thread images (original artwork)
    match /threads/{imageId} {
      // Anyone authenticated can read
      allow read: if isAuthenticated();
      // Only authenticated users can upload
      allow write: if isAuthenticated()
                   && request.resource.size < 10 * 1024 * 1024  // Max 10MB
                   && request.resource.contentType.matches('image/.*');
    }
    
    // Submission images (re-sketches)
    match /submissions/{imageId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated()
                   && request.resource.size < 10 * 1024 * 1024  // Max 10MB
                   && request.resource.contentType.matches('image/.*');
    }
    
    // Thumbnail images
    match /thumbnails/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated()
                   && request.resource.size < 2 * 1024 * 1024  // Max 2MB
                   && request.resource.contentType.matches('image/.*');
    }
    
    // Drawing data (PencilKit .pkdrawing files)
    match /drawings/{drawingId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated()
                   && request.resource.size < 5 * 1024 * 1024;  // Max 5MB
    }
  }
}
