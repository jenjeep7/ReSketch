rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      // Anyone authenticated can read user profiles
      allow read: if isAuthenticated();
      // Users can only create/update their own profile
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if false; // Don't allow deletes for now
    }
    
    // Threads collection (original artwork)
    match /threads/{threadId} {
      // Anyone authenticated can read threads
      allow read: if isAuthenticated();
      // Only authenticated users can create threads
      // And they must be the creator
      allow create: if isAuthenticated() 
                    && request.auth.uid == request.resource.data.creatorID;
      // Allow updates to increment submission count
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated() 
                    && request.auth.uid == resource.data.creatorID;
    }
    
    // Submissions collection (re-sketches)
    match /submissions/{submissionId} {
      // Anyone authenticated can read submissions
      allow read: if isAuthenticated();
      // Only authenticated users can create submissions
      // And they must be the artist
      allow create: if isAuthenticated() 
                    && request.auth.uid == request.resource.data.artistID;
      // Artists can update their own submissions
      allow update: if isAuthenticated() 
                    && request.auth.uid == resource.data.artistID;
      // Artists can delete their own submissions
      allow delete: if isAuthenticated() 
                    && request.auth.uid == resource.data.artistID;
    }
  }
}
